name: Build Android APK

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Clean Android build folders
        run: |
          if (Test-Path android/app/build) { Remove-Item -Recurse -Force android/app/build }
          if (Test-Path android/build) { Remove-Item -Recurse -Force android/build }
        shell: pwsh

      - name: Install Android SDK
        uses: android-actions/setup-android@v3

      # - name: Workaround for react-native-mmkv codegen on CI
      #   run: mkdir "node_modules\react-native-mmkv\android\build\generated\source\codegen\jni" -Force
      #   shell: pwsh

      # - name: Copy dummy MMKV CMakeLists.txt (for CI build)
      #   run: node ./scripts/copy-mmkv-cmakelists.js

      # - name: Debug- List MMKV codegen JNI dir
      #   run: dir node_modules\react-native-mmkv\android\build\generated\source\codegen\jni\
      #   shell: pwsh

      # - name: Debug- Show dummy MMKV CMakeLists.txt
      #   run: type node_modules\react-native-mmkv\android\build\generated\source\codegen\jni\CMakeLists.txt
      #   shell: pwsh

      - name: Gradle preBuild (generate autolinking files)
        run: |
          cd android
          ./gradlew :app:preBuild
          cd ..
        shell: pwsh

      - name: Build release APK
        run: ./gradlew assembleRelease
        working-directory: android
        shell: pwsh

      - name: Set APK version suffix
        id: apk_version_bash
        run: |
          if ($env:GITHUB_REF_NAME -and $env:GITHUB_REF -like 'refs/tags/*') {
            echo "suffix=$env:GITHUB_REF_NAME" >> $env:GITHUB_OUTPUT
          } else {
            echo "suffix=$env:GITHUB_RUN_NUMBER" >> $env:GITHUB_OUTPUT
          }
        shell: pwsh

      - name: Rename APK with version
        run: |
          Rename-Item -Path android\app\build\outputs\apk\release\app-release.apk -NewName app-release-${{ steps.apk_version_bash.outputs.suffix }}.apk
        shell: pwsh


      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk-${{ steps.apk_version_bash.outputs.suffix }}
          path: |
            android/app/build/outputs/apk/release/app-release-${{ steps.apk_version_bash.outputs.suffix }}.apk
          retention-days: 3
